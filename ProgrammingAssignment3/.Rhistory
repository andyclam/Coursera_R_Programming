stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.double(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3]),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
tail(rankall("heart failure"), 10)
i<-53
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
i<-54
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
sub
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.double(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
tail(rankall("heart failure"), 10)
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
values
i<-53
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
i<-53
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
values
mydatasub <- as.double(mydatasub[order(mydatasub[3], decreasing = FALSE),])
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
values
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
rowNum <- which.min(values)
rowNum
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
tail(rankall("heart failure"), 10)
i <- 53
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
values
sub
tail(mydatasub)
rowNum <- num - length(values) - which.min(values)
length(values)
which.min(values)
num <- 10
num <- 'best'
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
tail(rankall("heart failure"), 10)
i<-53
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
balues
values
rowNum <- which.min(values)
result <- data.frame()
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
result
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
tail(rankall("heart failure"), 10)
i<-53
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
rowNum <- which.min(values)
rowNum
sub
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
result
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
#      if(num == 'best'){
#           num <- 1
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
tail(rankall("heart failure"), 10)
submit()
num <- 10
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
sub
i<-53
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
values[-1]
rowNum <- length(values) - which.min(values) + num
rowNum
rowNum <- length(values) - which.min(values) - num
rowNum
rowNum <- abs(length(values) - which.min(values) - num )
rowNum
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
#      if(num == 'best'){
#           num <- 1
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- abs(length(values) - which.min(values) - num )
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
submit()
rowNum <- abs(length(values) - which.min(values) - num + 1 )
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
#      if(num == 'best'){
#           num <- 1
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[1]),]
mydatasub <- mydatasub[order(mydatasub[3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- abs(length(values) - which.min(values) - num + 1 )
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
submit()
mydatasub
mydatasub[which(mydatasub$State==states2[i]), ]
which(mydatasub$State==states2[i]
)
values <- sort(as.numeric(levels(sub[, 3]))[sub[, 3]])
values
sub <- sub[order(mydatasub[3])
]
sub <- sub[order(sub[3])]
sub <- sub[order(sub[,3])]
sub
sub[,3]
mydatasub <- mydatasub[order(mydatasub[,1]),]
mydatasub <- mydatasub[order(mydatasub[,3], decreasing = FALSE),]
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
sub <- sub[order(sub[,3])]
sub
sub[3]
sub <- sub[order(sub[3])]
sub <- sub[order(sub[,3]),]
sub
sub[,3] <- as.numeric(sub[,3])
sub <- sub[order(sub[,3]),]
sub
sub[,3] <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub <- sub[order(sub[,3]),]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
values
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
sub[,3] <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub
sub <- sub[order(sub[,3]),]
sub
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
#      if(num == 'best'){
#           num <- 1
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[,1]),]
mydatasub <- mydatasub[order(mydatasub[,3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
sub[,3] <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub <- sub[order(sub[,3]),]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- abs(num - (length(values) - which.min(values)) + 1 )
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
submit()
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
#      if(num == 'best'){
#           num <- 1
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.numeric(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
mydatasub <- mydatasub[order(mydatasub[,1]),]
mydatasub <- mydatasub[order(mydatasub[,3], decreasing = FALSE),]
result <- data.frame()
for(i in 1:length(states)){
sub <- mydatasub[which(mydatasub$State==states2[i]), ]
sub[,3] <- as.numeric(levels(sub[, 3]))[sub[, 3]]
sub <- sub[order(sub[,3]),]
values <- as.numeric(levels(sub[, 3]))[sub[, 3]]
if(num == "best"){
rowNum <- which.min(values)
} else if(num == "worst"){
rowNum <- which.max(values)
} else{
rowNum <- num
}
result <- rbind(result, data.frame('hospital' = sub[rowNum, ]$Hospital.Name, 'state' = states2[i]))
}
result
}
submit()
