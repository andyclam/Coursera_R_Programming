#           num <- sum(!is.na(mydatasub[,mortalityCol]))
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- as.data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.double(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
#mydatasub[,3] <- as.numeric(mydatasub[,3])
#hospitalorder <- order(mydatasub[,1])
#mortalityorder <- order(mydatasub[,3])
mydatasplit <- split(mydatasub, mydatasub$State)
sorted <- lapply(mydatasplit,
function(x){
sort(x)
}
)
ordered <- lapply(mydatasplit,
function(x){
order(x$Mortality)
}
)
ranked <- data.frame()
num2 <- num
for(i in 1:length(states)){
if(num2 == 'worst'){
num <- max(ordered[[i]])
}
if(length(which(ordered[[i]] == num)) > 0){
ranked <- rbind(ranked, mydatasplit[[i]][which(ordered[[i]] == num),])
}else{
ranked <- rbind(ranked, cbind('Hospital.Name' = '<NA>', 'State' = states2[i], 'Mortality' = 0))
}
}
#ranked <- as.data.frame(ranked)
## Return a data frame with the hospital names and the
## (abbreviated) state name
#      result <- data.frame()
#     for(i in 1:length(states2)){
#          result <- data.frame(rbind(result, cbind('hospital' = ranked[[1]][which(states2[i] == ranked[2])], 'state' = states2[i])))
#
#     }
result <- cbind('hospital' = ranked[1], 'state' = ranked[[2]])
names(result) <- c('hospital', 'state')
rownames(result) <- states2
result
}
head(rankall("heart attack", 20), 10)
sorted <- lapply(mydatasplit,
function(x){
sort(x)
}
)
?sort
sorted <- lapply(mydatasplit,
function(x){
sort(x$Hospital.Name)
}
)
sorted
sorted <- lapply(mydatasplit,
function(x){
sort(x$Hospital.Name, x$Mortality)
}
)
?with
ordered
sorted <- lapply(mydatasplit,
function(x){
sort(x[order(x$Hospital.Name)]))
}
)
sorted <- lapply(mydatasplit,
function(x){
sort(x[order(x$Hospital.Name)])
}
)
sorted <- lapply(mydatasplit,
function(x){
x[order(x$Hospital.Name)]
}
)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1])]
}
)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
sorted
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ordered
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
#if(any(states2[1] == state) == FALSE){
#      stop("invalid state")
#}
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
#      if(num == 'worst'){
#           num <- sum(!is.na(mydatasub[,mortalityCol]))
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- as.data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.double(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
#mydatasub[,3] <- as.numeric(mydatasub[,3])
#hospitalorder <- order(mydatasub[,1])
#mortalityorder <- order(mydatasub[,3])
mydatasplit <- split(mydatasub, mydatasub$State)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ranked <- data.frame()
num2 <- num
for(i in 1:length(states)){
if(num2 == 'worst'){
num <- max(ordered[[i]])
}
if(length(which(ordered[[i]] == num)) > 0){
ranked <- rbind(ranked, mydatasplit[[i]][which(ordered[[i]] == num),])
}else{
ranked <- rbind(ranked, cbind('Hospital.Name' = '<NA>', 'State' = states2[i], 'Mortality' = 0))
}
}
#ranked <- as.data.frame(ranked)
## Return a data frame with the hospital names and the
## (abbreviated) state name
#      result <- data.frame()
#     for(i in 1:length(states2)){
#          result <- data.frame(rbind(result, cbind('hospital' = ranked[[1]][which(states2[i] == ranked[2])], 'state' = states2[i])))
#
#     }
result <- cbind('hospital' = ranked[1], 'state' = ranked[[2]])
names(result) <- c('hospital', 'state')
rownames(result) <- states2
result
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
#if(any(states2[1] == state) == FALSE){
#      stop("invalid state")
#}
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
#      if(num == 'worst'){
#           num <- sum(!is.na(mydatasub[,mortalityCol]))
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- as.data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.double(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
#mydatasub[,3] <- as.numeric(mydatasub[,3])
#hospitalorder <- order(mydatasub[,1])
#mortalityorder <- order(mydatasub[,3])
mydatasplit <- split(mydatasub, mydatasub$State)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ranked <- data.frame()
num2 <- num
for(i in 1:length(states)){
if(num2 == 'worst'){
num <- max(ordered[[i]])
}
if(length(which(ordered[[i]] == num)) > 0){
ranked <- rbind(ranked, sorted[[i]][which(ordered[[i]] == num),])
}else{
ranked <- rbind(ranked, cbind('Hospital.Name' = '<NA>', 'State' = states2[i], 'Mortality' = 0))
}
}
#ranked <- as.data.frame(ranked)
## Return a data frame with the hospital names and the
## (abbreviated) state name
#      result <- data.frame()
#     for(i in 1:length(states2)){
#          result <- data.frame(rbind(result, cbind('hospital' = ranked[[1]][which(states2[i] == ranked[2])], 'state' = states2[i])))
#
#     }
result <- cbind('hospital' = ranked[1], 'state' = ranked[[2]])
names(result) <- c('hospital', 'state')
rownames(result) <- states2
result
}
head(rankall("heart attack", 20), 10)
sorted$AK
sorted$AL
mydata <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- factor(sort(unique(mydata$State)))
states2 <- sort(unique(mydata$State))
## Check that state and outcome are valid
#if(any(states2[1] == state) == FALSE){
#      stop("invalid state")
#}
outcomes <- c("heart attack", "heart failure", "pneumonia")
if(!(tolower(outcome) %in% outcomes)){
stop("invalid outcome")
}
## For each state, find the hospital of the given rank
if(num == 'best'){
num <- 1
}
#      if(num == 'worst'){
#           num <- sum(!is.na(mydatasub[,mortalityCol]))
#    }
outcome2 <- sub(" ", ".", outcome)
searchterm <- paste("hospital.30.day.death..mortality..rates.from.", outcome2, sep = "")
mortalityCol <- which(tolower(names(mydata)) == searchterm)
mydatasub <- as.data.frame(cbind('Hospital.Name' = mydata$Hospital.Name, 'State' = mydata$State, 'Mortality' = as.double(mydata[,mortalityCol])))
mydatasub <- mydatasub[!is.na(mydatasub[,3]),]
#mydatasub[,3] <- as.numeric(mydatasub[,3])
#hospitalorder <- order(mydatasub[,1])
#mortalityorder <- order(mydatasub[,3])
mydatasplit <- split(mydatasub, mydatasub$State)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ranked <- data.frame()
num2 <- num
ordered$AL
sorted$AL
sorted[[i]][which(ordered[[i]] == num),]
sorted[[2]][which(ordered[[2]] == num),]
num
ordered <- lapply(sorted,
function(x){
rownames(x) <- order(x$Mortality)
}
)
ordered
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ordered
sorted$AL
sorted <- lapply(sorted,
function(x){
rownames(x) <- order(x$Mortality)
}
)
sorted$AL
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
sorted$AL
for(i in 1:length(states)){
rownames(sorted[i]) = ordered[i]
}
sorted[i]
ordered[i]
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ordered$AK
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
sorted
sorted$AK
sorted$AL
sorted <- lapply(mydatasplit,
function(x){
x[order(x[3]),]
}
)
sorted$AL
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
sorted
sorted$AL
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ordered$AK
sorted$AK
?order
ordered <- lapply(sorted,
function(x){
order(x$Hospital.Name)
}
)
ordered$AK
ordered <- lapply(sorted,
function(x){
order(x[,3])
}
)
ordered$AL
ordered$AK
ordered <- lapply(sorted,
function(x){
rownames(x) <- order(x[,3])
x
}
)
ordered$AL
ordered$AK
ordered$AL
sorted$AL[1]
mydatasplit <- split(mydatasub, mydatasub$State)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
ordered <- lapply(sorted,
)
function(x){
order(x[,3])
}
)
mydatasplit <- split(mydatasub, mydatasub$State)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
ordered <- lapply(sorted,
function(x){
order(x[,3])
}
)
ordered$AK
sorted$AK
ordered <- lapply(mydatasplit,
function(x){
order(x[,3])
}
)
ordered$AK
mydatasplit$AK
?rank
head(rankall("heart attack", 20), 10)
sorted[[i]][which(ordered[[i]] == num),]
sorted[[1]][which(ordered[[1]] == 2),]
ordered <- lapply(mydatasplit,
function(x){
sort(x[,3])
order(x[,3])
}
)
ordered$AK
ordered <- lapply(mydatasplit,
function(x){
x <- sort(x[,3])
order(x[,3])
}
)
ordered <- lapply(mydatasplit,
function(x){
x <- sort(x[,3])
order(x)
}
)
ordered
sorted <- lapply(mydatasplit,
function(x){
x[order(x[3]),]
}
)
sorted$AK
ordered <- lapply(mydatasplit,
function(x){
order(x[,1])
}
)
ordered <- lapply(sorted,
function(x){
order(x[,1])
}
)
sorted$AK
ordered$AK
sorted <- lapply(mydatasplit,
function(x){
x[order(x[3]),]
}
)
ordered <- lapply(sorted,
function(x){
x <- x[order(x[1]),]
order(x[,1])
}
)
sorted$AK
ordered$AK
ordered <- lapply(sorted,
function(x){
x <- x[order(x[3]),]
order(x[,1])
}
)
ordered
ordered$AK
sorted$AK
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
ordered <- lapply(sorted,
function(x){
order(x[3])
}
)
ordered$AK
sorted$AK
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ordered$AK
mydatasub <- mydatasub[order(mydatasub[1]),]
View(mydatasub)
mydatasplit <- split(mydatasub, mydatasub$State)
sorted <- lapply(mydatasplit,
function(x){
x[order(x[1]),]
}
)
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ordered$AK
sorted$AK
summary(sorted)
states
ordered <- lapply(sorted,
function(x){
order(x$Mortality)
}
)
ordered$AK
sorted$AK
order(c(5,4,3,2,1))
order(c(5,2,3,4,1))
order(c(15.7,14.5,15.5,17.7,13.4))
c(15.7,14.5,15.5,17.7,13.4)
order(c(15.7,14.5,15.5,17.7,13.4))
order(c(15.7,14.5,15.5,17.7,13.4, 1))
?order
order(c(15.7,14.5,15.5,17.7,13.4), decreasing = TRUE)
